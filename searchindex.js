Search.setIndex({"docnames": ["example", "index", "modules", "references", "started", "tarexp", "tarexp.base", "tarexp.component", "tarexp.component.base", "tarexp.component.labeler", "tarexp.component.ranker", "tarexp.component.sampler", "tarexp.component.stopping", "tarexp.dataset", "tarexp.evaluation", "tarexp.experiments", "tarexp.helper", "tarexp.helper.pandas_tools", "tarexp.helper.plotting", "tarexp.ledger", "tarexp.util", "tarexp.workflow"], "filenames": ["example.rst", "index.rst", "modules.rst", "references.rst", "started.rst", "tarexp.rst", "tarexp.base.rst", "tarexp.component.rst", "tarexp.component.base.rst", "tarexp.component.labeler.rst", "tarexp.component.ranker.rst", "tarexp.component.sampler.rst", "tarexp.component.stopping.rst", "tarexp.dataset.rst", "tarexp.evaluation.rst", "tarexp.experiments.rst", "tarexp.helper.rst", "tarexp.helper.pandas_tools.rst", "tarexp.helper.plotting.rst", "tarexp.ledger.rst", "tarexp.util.rst", "tarexp.workflow.rst"], "titles": ["Examples", "Welcome to TARexp\u2019s documentation!", "tarexp", "References", "Get Started", "tarexp package", "tarexp.base module", "tarexp.component package", "tarexp.component.base module", "tarexp.component.labeler module", "tarexp.component.ranker module", "tarexp.component.sampler module", "tarexp.component.stopping module", "tarexp.dataset module", "tarexp.evaluation module", "tarexp.experiments module", "tarexp.helper package", "tarexp.helper.pandas_tools module", "tarexp.helper.plotting module", "tarexp.ledger module", "tarexp.util module", "tarexp.workflow module"], "terms": {"pleas": [0, 1, 3, 4, 13, 14, 15, 21], "visit": [0, 1], "our": [0, 1, 3], "googl": [0, 1], "colab": [0, 1], "demo": [0, 1], "check": [0, 1, 6, 8, 13, 21], "out": [0, 1, 21], "full": [0, 1, 14, 21], "The": [0, 1, 3, 6, 7, 8, 13, 14, 15, 19, 21], "follow": [0, 3, 4, 13, 21], "snippet": 0, "i": [0, 1, 3, 6, 7, 8, 11, 13, 14, 15, 19, 21], "an": [0, 1, 6, 7, 8, 11, 13, 14, 15, 19, 21], "creat": [0, 1, 6, 13, 19, 21], "dataset": [0, 2, 5, 9, 15, 21], "instanc": [0, 6, 7, 8, 9, 10, 11, 13, 14, 15, 19, 21], "tarexp": [0, 3, 4], "For": [0, 1, 9, 10, 11, 15], "scikit": [0, 10, 13], "learn": [0, 10, 11, 13, 15], "ranker": [0, 5, 7, 21], "structur": [0, 14], "bascial": 0, "spars": [0, 13], "scipi": [0, 13], "matrix": [0, 13], "vector": [0, 13], "list": [0, 8, 13, 14, 15, 19, 21], "arrai": [0, 13, 19], "binari": [0, 13], "label": [0, 5, 7, 13, 14, 15, 19, 21], "same": [0, 13, 19, 21], "length": [0, 13, 19, 20], "from": [0, 4, 7, 13, 14, 15, 19, 21], "sklearn": [0, 10], "import": [0, 4, 7], "panda": [0, 13, 14], "pd": 0, "rcv1": 0, "fetch_rcv1": 0, "x": [0, 10], "data": [0, 6, 21], "rel_info": 0, "datafram": [0, 13, 14, 18], "target": [0, 14], "todens": 0, "astyp": 0, "bool": [0, 8, 12, 14, 15, 19, 21], "column": [0, 13, 14], "target_nam": 0, "d": [0, 3, 11, 12, 14, 19, 21], "sparsevectordataset": [0, 2, 5, 13], "from_spars": [0, 5, 13], "defin": [0, 1, 13, 15, 21], "set": [0, 6, 8, 13, 14, 15, 19, 21], "componet": 0, "us": [0, 1, 4, 6, 8, 9, 13, 14, 15, 19, 21], "compon": [0, 1, 2, 4, 5, 6, 14, 15, 19, 21], "combin": [0, 1, 5, 7, 8, 15, 21], "sklearnrank": [0, 5, 7, 10], "logisticregress": 0, "solver": 0, "liblinear": 0, "perfectlabel": [0, 5, 7, 9, 14], "relevancesampl": [0, 5, 7, 11], "fixedroundstoppingrul": [0, 5, 7, 12], "max_round": [0, 12], "20": 0, "And": 0, "declar": [0, 1, 7, 21], "simpli": [0, 9, 21], "put": [0, 10], "your": 0, "other": [0, 6, 15, 21], "paramet": [0, 6, 8, 13, 14, 15, 19, 21], "onephasetarworkflow": [0, 2, 5, 15, 21], "set_label": 0, "gpro": 0, "seed_doc": [0, 17, 21], "1023": 0, "batch_siz": [0, 5, 15, 21], "200": [0, 15, 21], "random_se": [0, 5, 11, 15, 17, 21], "123": 0, "final": [0, 21], "you": [0, 4], "can": [0, 1, 4, 6, 9, 10, 13, 14, 15, 19, 21], "start": [0, 6, 15, 21], "execut": [0, 15, 19, 21], "iter": [0, 6, 13, 14, 15, 20, 21], "we": [0, 1, 9, 13, 14, 15, 19], "also": [0, 1, 6, 13, 14, 15, 19, 21], "support": [0, 1, 6, 10, 13, 14, 15, 19, 21], "everyth": 0, "ir": [0, 14, 15], "measur": [0, 5, 14, 15, 21], "evalu": [0, 2, 5, 13, 15, 19, 21], "metric": [0, 5, 14, 15, 21], "recording_metr": 0, "ir_measur": [0, 14, 15, 21], "rprec": 0, "optimisticcost": [0, 2, 5, 14, 15, 21], "target_recal": [0, 5, 12, 14], "0": [0, 6, 9, 12, 15, 18, 19, 21], "8": 0, "cost_structur": [0, 5, 14, 18], "25": 0, "5": [0, 9, 18], "1": [0, 6, 7, 11, 12, 14, 15, 19, 21], "ledger": [0, 2, 5, 11, 12, 13, 14, 21], "print": 0, "round": [0, 14, 15, 19, 21], "found": 0, "posit": [0, 13, 14, 15, 19], "total": [0, 14, 15, 19], "format": 0, "n_round": [0, 5, 19, 21], "n_pos_annot": [0, 5, 19], "getmetr": [0, 5, 14, 21], "besid": 0, "standard": [0, 1, 14], "implement": [0, 1, 6, 7, 10, 11, 13, 14, 15, 19, 21], "cost": [0, 14, 21], "base": [0, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21], "refer": [0, 1, 11, 13, 14, 15, 19, 21], "thi": [0, 1, 6, 11, 13, 14, 15, 19, 21], "paper": [0, 3], "http": [0, 3, 4, 7, 11, 12, 14, 19, 21], "arxiv": [0, 3, 11, 12, 14, 19, 21], "org": [0, 3, 7, 11, 12, 14, 19, 21], "ab": [0, 3, 11, 12, 14, 19, 21], "2106": [0, 12, 14, 21], "09866": [0, 14, 21], "__": 0, "more": [0, 7, 15, 21], "inform": [0, 7, 12, 13, 14, 15, 19, 21], "consid": [0, 13, 15, 19], "cite": [0, 3], "tarexperi": [0, 2, 5, 15], "wrapper": [0, 10], "dispatch": [0, 6, 15], "differ": [0, 1, 13, 14, 15], "It": [0, 6, 13, 14, 21], "construct": 0, "all": [0, 6, 13, 14, 15, 19, 21], "input": [0, 21], "dispath": 0, "each": [0, 6, 9, 10, 14, 15, 19, 21], "command": [0, 4], "6": 0, "which": [0, 6, 8, 14, 15, 19, 21], "consist": [0, 14, 15, 21], "3": [0, 6, 12, 15], "topic": [0, 15], "ha": [0, 6, 13, 21], "2": [0, 11, 12, 15, 19, 21], "batch": [0, 7, 11, 15, 19, 21], "size": [0, 15, 19, 21], "100": 0, "exp": 0, "my_tar_exp": 0, "max_round_exec": [0, 5, 15, 21], "p": [0, 14], "10": [0, 7, 12, 14, 15], "task": [0, 5, 13, 15], "taskfeed": [0, 2, 5, 13, 15], "gobit": 0, "e141": 0, "To": 0, "singl": [0, 15], "processor": 0, "resum": [0, 13, 15, 21], "ani": [0, 6, 10, 13, 15, 19, 21], "crash": 0, "exist": [0, 6, 8, 15, 21], "output": [0, 6, 8, 15, 21], "directori": [0, 6, 8, 15, 21], "result": [0, 1, 14, 15, 17, 19, 21], "n_process": [0, 15], "true": [0, 8, 13, 14, 15, 18, 21], "dump_frequ": [0, 15], "encourag": 0, "have": [0, 1, 6, 15, 19, 21], "built": [0, 6, 13], "number": [0, 13, 15, 19, 21], "packag": [0, 2, 4, 14], "continu": [0, 21], "updat": [0, 3, 21], "them": [0, 1, 21], "exmapl": 0, "replai": [0, 5, 15, 21], "stopping_rul": [0, 5, 15], "argument": [0, 13, 14, 15, 19], "replay_exp": 0, "stoppingexperimentonreplai": [0, 2, 5, 15], "test_stopping_rul": 0, "onephasetarworkflowreplai": [0, 2, 5, 21], "saved_exp_path": [0, 5, 15], "9": [0, 12], "kneestoppingrul": [0, 5, 7, 12], "budgetstoppingrul": [0, 5, 7, 12], "batchprecstoppingrul": [0, 5, 7, 12], "reviewhalfstoppingrul": [0, 5, 7, 12], "rule2399stoppingrul": [0, 5, 7, 12], "quantstoppingrul": [0, 5, 7, 12, 21], "4": [0, 7, 12, 21], "chmheuristicsstoppingrul": [0, 5, 7, 12], "stopping_result": 0, "provid": [0, 6, 8, 11, 13, 14, 15, 19, 21], "tool": 0, "createdffromresult": [0, 5, 16, 17], "either": [0, 21], "variabl": [0, 13, 15], "df": [0, 14], "helper": [0, 1, 2, 5, 14], "remove_redundant_level": [0, 17], "Or": [0, 4], "dynam": [0, 14], "graph": [0, 14], "introduc": [0, 9], "cost_dynam": [0, 5, 16, 18], "loc": 0, "groupbi": 0, "level": 0, "recall_target": [0, 18], "with_hatch": [0, 18], "altern": 0, "line": 0, "interfac": [0, 1, 6, 11, 21], "python": [0, 1, 3, 4, 6, 13, 14, 15, 21], "m": 0, "plot": [0, 5, 14, 16], "61b1f31a0a29de634939db77c0dde383": 0, "ae86e0b37809cb139dfa1f4cf914fb9b": 0, "y_thousand": [0, 18], "opensourc": 1, "framework": [1, 3], "conduct": 1, "tar": [1, 9, 11, 12, 13, 14, 15, 19, 21], "experi": [1, 2, 3, 5, 6, 9, 13, 14, 21], "variou": 1, "algorithm": [1, 7, 11], "method": [1, 6, 7, 8, 10, 13, 14, 15, 19, 21], "ar": [1, 6, 11, 12, 13, 14, 15, 19, 21], "commonli": 1, "fulli": 1, "reproduc": [1, 11, 19], "easi": 1, "ablat": 1, "studi": 1, "do": [1, 19, 21], "chang": [1, 15, 19, 21], "select": [1, 7, 11, 19, 21], "process": [1, 13, 14, 15, 21], "review": [1, 3, 7, 9, 12, 13, 14, 15, 19, 21], "repli": 1, "run": [1, 4, 5, 6, 13, 14, 15, 19, 21], "offlin": 1, "A": [1, 3, 7, 9, 11, 13, 14, 15, 19, 21], "major": 1, "advanc": 1, "over": 1, "previou": 1, "research": [1, 12], "softwar": 1, "abil": 1, "specifi": [1, 14, 15, 19, 21], "workflow": [1, 2, 5, 6, 7, 12, 13, 14, 15, 19], "user": [1, 13, 14, 15, 19, 21], "design": [1, 6, 13, 15], "includ": [1, 14, 15, 19, 21], "incorpor": [1, 14], "simul": [1, 9, 21], "human": [1, 9, 13, 21], "loop": [1, 13], "even": [1, 13], "embed": 1, "system": [1, 7], "actual": [1, 10, 13, 21], "though": 1, "done": [1, 19], "latter": 1, "function": [1, 6, 13, 14, 15], "analysi": [1, 14, 21], "avaiabl": 1, "exampl": [1, 15], "subpackag": 2, "submodul": 2, "modul": 2, "content": [2, 6, 8, 13], "event": [2, 5, 6, 15], "savabl": [2, 5, 6, 8, 19, 21], "space": [2, 5, 6], "easy_repr": [2, 5, 6], "measurekei": [2, 5, 14, 15, 21], "costcountkei": [2, 5, 14], "action": [2, 5, 15], "frozenledg": [2, 5, 19, 21], "util": [2, 5, 6, 13], "stable_hash": [2, 5, 13, 20], "getonedimscor": [2, 5, 20], "saveobj": [2, 5, 20], "readobj": [2, 5, 6, 20], "iter_with_length": [2, 5, 15, 20], "workflowreplai": [2, 5, 15, 21], "twophasetarworkflow": [2, 5, 21], "kindli": 3, "bibtex": 3, "current": [3, 6, 13, 19, 21], "under": 3, "onc": [3, 21], "accept": 3, "articl": 3, "2020tarexp": 3, "author": 3, "eugen": [3, 4, 12, 14, 19, 21], "yang": [3, 4, 12, 14, 19, 21], "david": [3, 11, 12, 14, 19, 21], "lewi": [3, 11, 12, 14, 19, 21], "titl": 3, "technologi": [3, 7, 12, 19], "assist": [3, 7, 12, 19], "eprint": 3, "2202": 3, "11827": 3, "archiveprefix": 3, "year": 3, "2022": 3, "url": 3, "instal": 4, "pypi": 4, "pip": 4, "lastest": 4, "version": [4, 6, 13, 15, 19], "github": 4, "git": 4, "com": 4, "If": [4, 6, 8, 13, 14, 15, 19, 21], "like": [4, 14], "build": [4, 6], "sourc": [4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21], "clone": 4, "cd": 4, "setup": 4, "py": [4, 6], "bdist_wheel": 4, "dist": [4, 11], "whl": 4, "In": [4, 14, 15, 21], "both": [4, 13, 14, 15, 21], "main": 4, "functioncompon": [5, 7, 8], "ascompon": [5, 7, 8], "combinedcompon": [5, 7, 8], "successproblabel": [5, 7, 9], "adddummyneg": [5, 7, 10], "sampler": [5, 7, 21], "uncertaintysampl": [5, 7, 11], "randomsampl": [5, 7, 11], "stop": [5, 7, 14, 15, 19, 21], "stoppingrul": [5, 7, 12, 15], "nullstoppingrul": [5, 7, 12], "pandas_tool": [5, 16], "lighten": [5, 16, 18], "fire": [5, 6], "updatecallback": [5, 6], "save": [5, 6, 7, 8, 15, 21], "load": [5, 6, 7, 8, 21], "kei": [5, 6, 13, 14, 15, 19], "item": [5, 6], "valu": [5, 6, 13, 14, 15, 19, 21], "identifi": [5, 6, 13], "name": [5, 6, 8, 13, 14, 15, 21], "n_doc": [5, 13, 19], "haslabel": [5, 7, 8, 13], "pos_doc_id": [5, 13], "neg_doc_id": [5, 13], "ingest": [5, 13], "setlabel": [5, 13], "getalldata": [5, 13], "gettrainingdata": [5, 13], "duplic": [5, 13], "from_text": [5, 13], "from_ird": [5, 13], "section": [5, 14], "calc_al": [5, 14], "should_sav": [5, 15], "should_stop": [5, 15], "output_path": [5, 15], "saved_score_limit": [5, 15, 17, 21], "saved_checkpoint_limit": [5, 15, 21], "registerexecargu": [5, 15], "available_ev": [5, 15], "savable_field": [5, 15], "generateset": [5, 15], "exec": [5, 15], "control_set_s": [5, 15, 21], "workflow_kwarg": [5, 15], "repeat_task": [5, 15], "seed_docs_construct": [5, 15], "exp_early_stop": [5, 15], "createcontrol": [5, 19], "annot": [5, 19], "getreviewedid": [5, 19], "control_mask": [5, 19], "n_annot": [5, 19], "n_neg_annot": [5, 19], "isdon": [5, 19], "getannotationcount": [5, 19], "freez": [5, 7, 11, 19, 21], "freeze_at": [5, 14, 19], "isstop": [5, 21], "latest_scor": [5, 21], "step": [5, 15, 21], "makereplai": [5, 21], "review_candid": [5, 21], "contain": [6, 13, 14, 15, 21], "class": [6, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21], "inherit": [6, 13, 15, 21], "object": [6, 7, 8, 13, 14, 15], "deprec": 6, "sinc": [6, 15, 21], "plan": 6, "remov": 6, "futur": [6, 14], "itself": 6, "str": [6, 14, 15, 18, 21], "arg": [6, 8, 9, 10, 11, 12, 19, 21], "kwarg": [6, 8, 9, 10, 11, 12, 13, 15, 18, 19, 21], "f": 6, "callabl": [6, 15], "callback": [6, 15], "default": [6, 13, 15, 21], "mixin": 6, "gzip": 6, "pickl": 6, "file": [6, 8], "read": 6, "howev": [6, 10, 15, 21], "catch": [6, 14], "potenti": 6, "would": [6, 10, 14, 15, 21], "its": [6, 15, 21], "own": [6, 15, 21], "path": [6, 8, 15, 21], "overwrit": [6, 8, 21], "fals": [6, 13, 15, 17, 18, 21], "filenam": [6, 8], "extent": [6, 8], "pgz": [6, 8], "whether": [6, 8, 13, 14, 15, 19, 21], "return": [6, 8, 13, 14, 15, 19], "type": [6, 8, 14, 19], "classmethod": [6, 8, 13, 21], "should": [6, 8, 13, 14, 15, 19, 21], "look": [6, 8, 9, 13, 21], "evok": [6, 8], "namespac": 6, "hashabl": [6, 14], "extens": [6, 13], "argpars": 6, "better": 6, "__repr__": 6, "being": [6, 15, 19, 21], "stabl": [6, 13], "hash": [6, 13, 21], "direct": 6, "access": 6, "attribut": [6, 13, 15, 21], "common": 6, "dictionari": [6, 13, 14, 15, 19], "least": [6, 11], "represent": 6, "uniqu": [6, 13], "distinguish": 6, "compar": 6, "sort": 6, "tupl": [6, 13, 14, 15], "similar": [6, 14], "order": [6, 13, 15, 21], "cl": [6, 20], "decor": 6, "config": 6, "non": [6, 19], "_": 6, "ignor": 6, "begin": [7, 8, 9, 10, 11], "reset": [7, 8, 9, 10], "checkrol": [7, 8], "hasstoppingrul": [7, 8], "hasrank": [7, 8], "hassampl": [7, 8], "labeldoc": [7, 9], "trainrank": [7, 10], "scoredocu": [7, 10], "sampledoc": [7, 11], "checkstop": [7, 12], "via": [7, 13], "serv": [7, 14], "one": [7, 14, 15, 19, 21], "role": [7, 8, 21], "e": [7, 10, 13, 19, 21], "g": [7, 10, 13, 19, 21], "rule": [7, 12, 14, 15, 19, 21], "train": [7, 11, 19, 21], "commun": [7, 21], "onli": [7, 14, 15, 19, 21], "through": [7, 10, 14, 15, 21], "associ": [7, 14], "multipl": [7, 13, 14, 15, 21], "when": [7, 13, 15, 19, 21], "where": [7, 13, 15, 19, 21], "interact": 7, "tightli": 7, "particular": [7, 12], "autostop": 7, "dan": 7, "li": 7, "evangelo": 7, "kanoula": 7, "sampl": [7, 11, 14, 15, 21], "adapt": 7, "distribut": 7, "estim": [7, 14, 15, 19, 21], "residu": 7, "relev": [7, 11, 14, 19], "document": [7, 9, 10, 12, 13, 14, 15, 19, 21], "acm": [7, 12, 14, 19, 21], "transact": 7, "toi": 7, "38": 7, "2020": [7, 12], "36": 7, "dl": [7, 12], "doi": [7, 12], "1145": [7, 12], "3411755": 7, "properti": [8, 13, 15, 19, 21], "func": [8, 15], "comp": 8, "strict": 8, "output_fil": 8, "most": [9, 13, 21], "assum": 9, "up": [9, 13, 14, 21], "gold": [9, 15, 21], "random": [9, 11, 15, 21], "error": 9, "doc_id": 9, "success_prob": 9, "randomst": 9, "classif": 10, "model": [10, 21], "supervis": 10, "produc": 10, "score": [10, 11, 14, 15, 19, 20, 21], "collect": [10, 13, 14, 15, 19, 21], "integr": 10, "requir": [10, 13, 14, 19, 21], "alloc": 10, "lot": 10, "memori": [10, 13, 19, 21], "carri": 10, "state": [10, 15, 19, 21], "neural": 10, "sgdclassifi": 10, "partial_fit": 10, "ideal": [10, 13, 14, 21], "initi": [10, 15, 19, 21], "properli": 10, "dispos": 10, "y": 10, "varieti": 11, "specif": [11, 19, 21], "aid": 11, "reduc": 11, "experiment": [11, 15], "work": 11, "uncertainti": 11, "feedback": [11, 15], "simpl": [11, 13], "inspir": 11, "libact": 11, "activ": [11, 15], "librari": 11, "william": 11, "gale": 11, "sequenti": 11, "text": [11, 13], "classifi": 11, "sigir": [11, 12], "1994": 11, "springer": 11, "london": 11, "cmp": 11, "lg": 11, "9407020": 11, "rocchio": 11, "psuedo": 11, "en": 11, "wikipedia": 11, "wiki": 11, "rocchio_algorithm": 11, "nask": 11, "int": [11, 14, 15, 19, 20, 21], "confid": 11, "none": [11, 12, 13, 14, 15, 18, 20, 21], "focu": 12, "float": [12, 14, 15, 21], "gordon": 12, "v": 12, "cormack": 12, "maura": 12, "r": 12, "grossman": 12, "engin": [12, 14, 21], "qualiti": 12, "reliabl": [12, 15], "proceed": [12, 14, 19, 21], "39th": 12, "intern": [12, 14, 15, 19, 21], "confer": [12, 19], "develop": 12, "retriev": [12, 13], "2016": 12, "2911451": 12, "2911510": 12, "prec_cutoff": 12, "025": 12, "slack": 12, "nstd": 12, "ophir": [12, 14, 19, 21], "frieder": [12, 14, 19, 21], "heurist": 12, "21st": [12, 14, 21], "symposium": [12, 14, 21], "2021": [12, 14, 19, 21], "09871": 12, "alpha": 12, "05": 12, "max": 12, "w": 12, "callaghan": 12, "finn": 12, "m\u00fcller": 12, "hansen": 12, "statist": [12, 21], "criteria": 12, "autom": 12, "screen": 12, "systemat": 12, "14": 12, "pubm": 12, "ncbi": 12, "nlm": 12, "nih": 12, "gov": 12, "33248464": 12, "essenti": [13, 21], "static": [13, 14, 15, 21], "throughout": [13, 21], "encod": 13, "limit": [13, 14, 15, 21], "form": 13, "depend": [13, 14, 15, 21], "intend": [13, 14, 21], "gener": [13, 14, 15], "tfidf": 13, "huggingfac": 13, "transform": [13, 21], "token": 13, "leav": 13, "flexibl": 13, "further": [13, 14, 21], "groud": 13, "truth": [13, 14], "without": [13, 21], "intervent": [13, 19], "ground": [13, 14], "longer": 13, "meta": [13, 21], "basic": 13, "featur": 13, "downstream": [13, 15], "verifi": [13, 21], "ident": [13, 21], "summar": 13, "doe": [13, 21], "locat": 13, "capabl": [13, 21], "raw": 13, "store": [13, 15, 21], "_vector": 13, "option": [13, 19, 21], "copi": 13, "could": [13, 15, 21], "collet": 13, "too": 13, "larg": [13, 15], "new": [13, 19], "re": 13, "demand": 13, "collat": 13, "pytorch": 13, "take": [13, 15, 21], "alreadi": [13, 15, 21], "reason": 13, "along": [13, 21], "perform": [13, 15, 21], "deep": 13, "prevent": 13, "referenc": 13, "fast": [13, 15], "multi": 13, "recommand": [13, 21], "instead": 13, "modifi": [13, 15, 19], "accid": 13, "dure": [13, 21], "unavail": 13, "rais": [13, 19, 21], "notimpl": 13, "except": [13, 19, 21], "notimplementederror": 13, "reflect": 13, "intent": 13, "neg": [13, 14, 15, 19], "docuemnt": [13, 19], "id": [13, 19, 21], "spawn": [13, 15], "make": 13, "sure": 13, "origin": [13, 21], "pollut": 13, "forc": [13, 21], "inplac": 13, "factori": 13, "fit_transform": 13, "skip": [13, 21], "test": [13, 15, 19, 21], "datset": 13, "numpi": [13, 19], "match": 13, "appli": 13, "replac": 13, "yield": [13, 15, 21], "given": [13, 14], "next": 13, "index": [13, 15], "been": [13, 19, 21], "materi": 13, "correspond": [13, 14, 15, 19, 21], "inbas": 13, "fed": 13, "row": [13, 14], "against": 13, "warn": [13, 21], "especi": [13, 21], "across": [13, 15], "machin": [13, 15], "__len__": 13, "respect": [13, 14, 15], "yet": 13, "come": 13, "soon": 13, "effect": [14, 19], "tricki": 14, "issu": 14, "tiebreak": 14, "critic": 14, "becaus": 14, "mai": 14, "small": 14, "open": 14, "comput": 14, "unreview": 14, "finit": 14, "popul": 14, "perspect": 14, "addit": [14, 15], "end": [14, 19, 21], "propos": 14, "et": [14, 21], "al": [14, 21], "Such": 14, "recal": 14, "On": [14, 21], "minim": [14, 21], "legal": [14, 21], "part": [14, 15, 21], "known": 14, "etc": [14, 19], "record": [14, 19, 21], "count": 14, "optimist": 14, "first": [14, 15, 19], "optim": 14, "second": [14, 19, 21], "phase": [14, 19, 21], "detail": 14, "four": [14, 15, 21], "element": 14, "unit": 14, "ones": [14, 15, 21], "calcul": [14, 15, 21], "query_id": 14, "control": [14, 15, 19, 21], "boolean": 14, "auxiliari": 14, "dict": [14, 15, 18, 19, 21], "last": 14, "inted": 14, "cacul": 14, "past": [14, 21], "addtion": 14, "ad": 14, "complet": [14, 19], "necessarili": 14, "groun": 14, "progress": [14, 15, 19], "strong": 15, "condit": [15, 21], "seed": [15, 19, 21], "necessari": [15, 19], "demonstr": 15, "approach": 15, "domin": 15, "anoth": 15, "network": 15, "thread": 15, "appropri": 15, "hardwar": 15, "runtim": 15, "abov": 15, "two": [15, 19, 21], "simultan": 15, "per": [15, 21], "node": 15, "reciev": 15, "suggest": [15, 21], "certain": [15, 21], "oper": [15, 21], "checkpoint": [15, 21], "after": [15, 21], "dataclass": 15, "determin": [15, 21], "individu": 15, "disk": [15, 19, 21], "configur": 15, "pass": 15, "describ": [15, 21], "how": 15, "arug": 15, "regist": 15, "ensur": [15, 21], "indic": [15, 21], "maximum": [15, 21], "older": [15, 21], "delet": [15, 21], "silent": [15, 21], "allow": [15, 21], "ti": 15, "avail": 15, "invok": [15, 19, 21], "funtion": 15, "disable_tqdm": [15, 17], "n_node": 15, "node_id": 15, "runtime_kwarg": 15, "nativ": 15, "multiprocess": 15, "parallel": 15, "need": [15, 21], "manual": [15, 21], "proper": 15, "let": 15, "eventu": 15, "underli": [15, 19, 21], "show": 15, "bar": 15, "among": 15, "expect": 15, "frequenc": 15, "complex": 15, "wai": 15, "sensibl": 15, "rest": 15, "run_path": 15, "calcuat": 15, "confus": 15, "focus": 15, "side": 15, "behavior": [15, 21], "compat": 15, "mark": [15, 19], "contribut": 15, "2x3x3x10": 15, "180": 15, "independ": 15, "project": 15, "alia": 15, "pair": [15, 19, 21], "time": [15, 21], "replic": 15, "exp_set": 15, "workflow_cl": 15, "static_set": 15, "interven": 15, "cannot": 15, "those": [15, 21], "earli": 15, "replay_cl": 15, "replay_workflow": 15, "ignore_kei": 17, "color": 18, "amount": 18, "run_df": 18, "after_recall_color": 18, "shape": 18, "figsiz": 18, "legend_col": 18, "max_show_round": 18, "aspect": 19, "histori": 19, "were": 19, "write": 19, "interv": 19, "enabl": 19, "restart": 19, "persist": 19, "frozen": [19, 21], "mode": 19, "effici": [19, 21], "certifi": 19, "One": [19, 21], "30th": 19, "knowledg": 19, "manag": 19, "2108": 19, "12746": 19, "plese": 19, "annoat": 19, "treat": 19, "np": [19, 21], "ndarrai": [19, 21], "get": 19, "nan": 19, "mask": 19, "org_ledg": 19, "prohibit": 19, "lock": 19, "writabl": 19, "frozeninstanceerror": 19, "Not": [19, 21], "obj": 20, "fn": 20, "": 21, "so": 21, "reach": 21, "servic": 21, "rank": 21, "sequenc": 21, "fix": 21, "until": 21, "cutoff": 21, "procedur": 21, "outsid": 21, "custom": 21, "later": 21, "special": 21, "kind": 21, "wokrflow": 21, "gather": 21, "exisit": 21, "bookkeep": 21, "__init__": 21, "sepcifi": 21, "block": 21, "correctli": 21, "textual": 21, "search": 21, "strictli": 21, "might": 21, "befor": 21, "smaller": 21, "than": 21, "affect": 21, "fewer": 21, "stabil": 21, "latest": 21, "incomplet": 21, "failur": 21, "happen": 21, "decis": 21, "cach": 21, "consult": 21, "output_dir": 21, "with_compon": 21, "suffici": 21, "leverag": 21, "progess": 21, "suppos": 21, "regardless": 21, "unsupport": 21, "saved_path": 21, "must": 21, "wa": 21, "turn": 21, "inconsist": 21, "abstract": 21, "proce": 21, "retrain": 21, "saved_scor": 21, "ordereddict": 21, "interfer": 21, "thei": 21, "enforc": 21, "strategi": 21, "expert": 21, "reveal": 21, "entir": 21, "often": 21, "ediscoveri": 21, "miss": 21, "excpet": 21, "here": 21, "documet": 21, "extend": 21, "add": 21, "poststop": 21}, "objects": {"": [[5, 0, 0, "-", "tarexp"]], "tarexp": [[6, 0, 0, "-", "base"], [7, 0, 0, "-", "component"], [13, 0, 0, "-", "dataset"], [14, 0, 0, "-", "evaluation"], [15, 0, 0, "-", "experiments"], [16, 0, 0, "-", "helper"], [19, 0, 0, "-", "ledger"], [20, 0, 0, "-", "util"], [21, 0, 0, "-", "workflow"]], "tarexp.base": [[6, 1, 1, "", "Eventable"], [6, 1, 1, "", "Savable"], [6, 3, 1, "", "easy_repr"], [6, 1, 1, "", "space"]], "tarexp.base.Eventable": [[6, 2, 1, "", "fire"], [6, 2, 1, "", "on"], [6, 2, 1, "", "updateCallbacks"]], "tarexp.base.Savable": [[6, 2, 1, "", "load"], [6, 2, 1, "", "save"]], "tarexp.base.space": [[6, 2, 1, "", "items"], [6, 2, 1, "", "keys"], [6, 2, 1, "", "values"]], "tarexp.component": [[8, 0, 0, "-", "base"], [9, 0, 0, "-", "labeler"], [10, 0, 0, "-", "ranker"], [11, 0, 0, "-", "sampler"], [12, 0, 0, "-", "stopping"]], "tarexp.component.base": [[8, 1, 1, "", "CombinedComponent"], [8, 1, 1, "", "Component"], [8, 1, 1, "", "FunctionComponent"], [8, 3, 1, "", "asComponent"], [8, 3, 1, "", "combine"]], "tarexp.component.base.CombinedComponent": [[8, 2, 1, "", "begin"], [8, 2, 1, "", "load"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "save"]], "tarexp.component.base.Component": [[8, 2, 1, "", "begin"], [8, 2, 1, "", "checkRole"], [8, 4, 1, "", "hasLabeler"], [8, 4, 1, "", "hasRanker"], [8, 4, 1, "", "hasSampler"], [8, 4, 1, "", "hasStoppingRule"], [8, 2, 1, "", "reset"]], "tarexp.component.labeler": [[9, 1, 1, "", "Labeler"], [9, 1, 1, "", "PerfectLabeler"], [9, 1, 1, "", "SuccessProbLabeler"]], "tarexp.component.labeler.Labeler": [[9, 2, 1, "", "labelDocs"]], "tarexp.component.labeler.PerfectLabeler": [[9, 2, 1, "", "begin"], [9, 2, 1, "", "labelDocs"], [9, 2, 1, "", "reset"]], "tarexp.component.labeler.SuccessProbLabeler": [[9, 2, 1, "", "begin"], [9, 2, 1, "", "labelDocs"], [9, 2, 1, "", "reset"]], "tarexp.component.ranker": [[10, 1, 1, "", "Ranker"], [10, 1, 1, "", "SklearnRanker"], [10, 3, 1, "", "addDummyNeg"]], "tarexp.component.ranker.Ranker": [[10, 2, 1, "", "scoreDocuments"], [10, 2, 1, "", "trainRanker"]], "tarexp.component.ranker.SklearnRanker": [[10, 2, 1, "", "reset"], [10, 2, 1, "", "scoreDocuments"], [10, 2, 1, "", "trainRanker"]], "tarexp.component.sampler": [[11, 1, 1, "", "RandomSampler"], [11, 1, 1, "", "RelevanceSampler"], [11, 1, 1, "", "Sampler"], [11, 1, 1, "", "UncertaintySampler"]], "tarexp.component.sampler.RandomSampler": [[11, 2, 1, "", "begin"], [11, 2, 1, "", "sampleDocs"]], "tarexp.component.sampler.RelevanceSampler": [[11, 2, 1, "", "sampleDocs"]], "tarexp.component.sampler.Sampler": [[11, 2, 1, "", "sampleDocs"]], "tarexp.component.sampler.UncertaintySampler": [[11, 2, 1, "", "freeze"], [11, 2, 1, "", "sampleDocs"]], "tarexp.component.stopping": [[12, 1, 1, "", "BatchPrecStoppingRule"], [12, 1, 1, "", "BudgetStoppingRule"], [12, 1, 1, "", "CHMHeuristicsStoppingRule"], [12, 1, 1, "", "FixedRoundStoppingRule"], [12, 1, 1, "", "KneeStoppingRule"], [12, 1, 1, "", "NullStoppingRule"], [12, 1, 1, "", "QuantStoppingRule"], [12, 1, 1, "", "ReviewHalfStoppingRule"], [12, 1, 1, "", "Rule2399StoppingRule"], [12, 1, 1, "", "StoppingRule"]], "tarexp.component.stopping.BatchPrecStoppingRule": [[12, 2, 1, "", "checkStopping"]], "tarexp.component.stopping.BudgetStoppingRule": [[12, 2, 1, "", "checkStopping"]], "tarexp.component.stopping.CHMHeuristicsStoppingRule": [[12, 2, 1, "", "checkStopping"]], "tarexp.component.stopping.FixedRoundStoppingRule": [[12, 2, 1, "", "checkStopping"]], "tarexp.component.stopping.KneeStoppingRule": [[12, 2, 1, "", "checkStopping"]], "tarexp.component.stopping.NullStoppingRule": [[12, 2, 1, "", "checkStopping"]], "tarexp.component.stopping.QuantStoppingRule": [[12, 2, 1, "", "checkStopping"]], "tarexp.component.stopping.ReviewHalfStoppingRule": [[12, 2, 1, "", "checkStopping"]], "tarexp.component.stopping.Rule2399StoppingRule": [[12, 2, 1, "", "checkStopping"]], "tarexp.component.stopping.StoppingRule": [[12, 2, 1, "", "checkStopping"]], "tarexp.dataset": [[13, 1, 1, "", "Dataset"], [13, 1, 1, "", "SparseVectorDataset"], [13, 1, 1, "", "TaskFeeder"]], "tarexp.dataset.Dataset": [[13, 2, 1, "", "duplicate"], [13, 2, 1, "", "from_text"], [13, 2, 1, "", "getAllData"], [13, 2, 1, "", "getTrainingData"], [13, 4, 1, "", "hasLabels"], [13, 4, 1, "", "identifier"], [13, 2, 1, "", "ingest"], [13, 4, 1, "", "labels"], [13, 4, 1, "", "n_docs"], [13, 4, 1, "", "name"], [13, 4, 1, "", "neg_doc_ids"], [13, 4, 1, "", "pos_doc_ids"], [13, 2, 1, "", "setLabels"]], "tarexp.dataset.SparseVectorDataset": [[13, 2, 1, "", "duplicate"], [13, 2, 1, "", "from_sparse"], [13, 4, 1, "", "identifier"], [13, 2, 1, "", "ingest"], [13, 4, 1, "", "labels"], [13, 4, 1, "", "n_docs"], [13, 4, 1, "", "neg_doc_ids"], [13, 4, 1, "", "pos_doc_ids"], [13, 2, 1, "", "setLabels"]], "tarexp.dataset.TaskFeeder": [[13, 2, 1, "", "from_irds"]], "tarexp.evaluation": [[14, 1, 1, "", "CostCountKey"], [14, 1, 1, "", "MeasureKey"], [14, 1, 1, "", "OptimisticCost"], [14, 3, 1, "", "evaluate"]], "tarexp.evaluation.CostCountKey": [[14, 5, 1, "", "label"], [14, 5, 1, "", "measure"], [14, 5, 1, "", "section"], [14, 5, 1, "", "target_recall"]], "tarexp.evaluation.MeasureKey": [[14, 5, 1, "", "measure"], [14, 5, 1, "", "section"], [14, 5, 1, "", "target_recall"]], "tarexp.evaluation.OptimisticCost": [[14, 2, 1, "", "calc_all"], [14, 5, 1, "", "cost_structure"], [14, 5, 1, "", "measure"], [14, 5, 1, "", "section"], [14, 5, 1, "", "target_recall"]], "tarexp.experiments": [[15, 1, 1, "", "Action"], [15, 1, 1, "", "Experiment"], [15, 1, 1, "", "StoppingExperimentOnReplay"], [15, 1, 1, "", "TARExperiment"]], "tarexp.experiments.Action": [[15, 5, 1, "", "should_save"], [15, 5, 1, "", "should_stop"]], "tarexp.experiments.Experiment": [[15, 4, 1, "", "available_events"], [15, 2, 1, "", "exec"], [15, 2, 1, "", "generateSettings"], [15, 5, 1, "", "max_round_exec"], [15, 5, 1, "", "metrics"], [15, 2, 1, "", "on"], [15, 5, 1, "", "output_path"], [15, 5, 1, "", "random_seed"], [15, 2, 1, "", "registerExecArguments"], [15, 2, 1, "", "run"], [15, 4, 1, "", "savable_fields"], [15, 5, 1, "", "saved_checkpoint_limit"], [15, 5, 1, "", "saved_score_limit"]], "tarexp.experiments.StoppingExperimentOnReplay": [[15, 4, 1, "", "available_events"], [15, 2, 1, "", "exec"], [15, 5, 1, "", "exp_early_stopping"], [15, 2, 1, "", "generateSettings"], [15, 5, 1, "", "replay"], [15, 5, 1, "", "saved_exp_path"], [15, 5, 1, "", "stopping_rules"], [15, 5, 1, "", "tasks"]], "tarexp.experiments.TARExperiment": [[15, 4, 1, "", "available_events"], [15, 5, 1, "", "batch_size"], [15, 5, 1, "", "components"], [15, 5, 1, "", "control_set_size"], [15, 2, 1, "", "exec"], [15, 2, 1, "", "generateSettings"], [15, 5, 1, "", "repeat_tasks"], [15, 5, 1, "", "seed_docs_construction"], [15, 5, 1, "", "tasks"], [15, 5, 1, "", "workflow"], [15, 5, 1, "", "workflow_kwargs"]], "tarexp.helper": [[17, 0, 0, "-", "pandas_tools"], [18, 0, 0, "-", "plotting"]], "tarexp.helper.pandas_tools": [[17, 3, 1, "", "createDFfromResults"]], "tarexp.helper.plotting": [[18, 3, 1, "", "cost_dynamic"], [18, 3, 1, "", "lighten"]], "tarexp.ledger": [[19, 1, 1, "", "FrozenLedger"], [19, 1, 1, "", "Ledger"]], "tarexp.ledger.FrozenLedger": [[19, 2, 1, "", "annotate"], [19, 4, 1, "", "n_rounds"]], "tarexp.ledger.Ledger": [[19, 2, 1, "", "annotate"], [19, 4, 1, "", "annotated"], [19, 4, 1, "", "annotation"], [19, 4, 1, "", "control_mask"], [19, 2, 1, "", "createControl"], [19, 2, 1, "", "freeze"], [19, 2, 1, "", "freeze_at"], [19, 2, 1, "", "getAnnotationCounts"], [19, 2, 1, "", "getReviewedIds"], [19, 4, 1, "", "isDone"], [19, 4, 1, "", "n_annotated"], [19, 4, 1, "", "n_docs"], [19, 4, 1, "", "n_neg_annotated"], [19, 4, 1, "", "n_pos_annotated"], [19, 4, 1, "", "n_rounds"]], "tarexp.util": [[20, 3, 1, "", "getOneDimScores"], [20, 1, 1, "", "iter_with_length"], [20, 3, 1, "", "readObj"], [20, 3, 1, "", "saveObj"], [20, 3, 1, "", "stable_hash"]], "tarexp.workflow": [[21, 1, 1, "", "OnePhaseTARWorkflow"], [21, 1, 1, "", "OnePhaseTARWorkflowReplay"], [21, 1, 1, "", "TwoPhaseTARWorkflow"], [21, 1, 1, "", "Workflow"], [21, 1, 1, "", "WorkflowReplay"]], "tarexp.workflow.OnePhaseTARWorkflow": [[21, 2, 1, "", "getMetrics"], [21, 2, 1, "", "makeReplay"], [21, 5, 1, "", "review_candidates"], [21, 2, 1, "", "step"]], "tarexp.workflow.OnePhaseTARWorkflowReplay": [[21, 4, 1, "", "latest_scores"], [21, 4, 1, "", "review_candidates"]], "tarexp.workflow.TwoPhaseTARWorkflow": [[21, 2, 1, "", "step"]], "tarexp.workflow.Workflow": [[21, 4, 1, "", "component"], [21, 4, 1, "", "dataset"], [21, 2, 1, "", "getMetrics"], [21, 4, 1, "", "isStopped"], [21, 4, 1, "", "latest_scores"], [21, 4, 1, "", "ledger"], [21, 2, 1, "", "load"], [21, 2, 1, "", "makeReplay"], [21, 4, 1, "", "n_rounds"], [21, 2, 1, "", "save"], [21, 2, 1, "", "step"]], "tarexp.workflow.WorkflowReplay": [[21, 4, 1, "", "isStopped"], [21, 4, 1, "", "ledger"], [21, 4, 1, "", "n_rounds"], [21, 2, 1, "", "save"], [21, 2, 1, "", "step"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"exampl": 0, "run": 0, "workflow": [0, 21], "experi": [0, 15], "tar": 0, "test": 0, "stop": [0, 12], "rule": 0, "visual": 0, "welcom": 1, "tarexp": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "": 1, "document": 1, "refer": 3, "get": 4, "start": 4, "packag": [5, 7, 16], "subpackag": 5, "submodul": [5, 7, 16], "modul": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "content": [5, 7, 16], "base": [6, 8], "compon": [7, 8, 9, 10, 11, 12], "label": 9, "ranker": 10, "sampler": 11, "dataset": 13, "evalu": 14, "helper": [16, 17, 18], "pandas_tool": 17, "plot": 18, "ledger": 19, "util": 20}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"Examples": [[0, "examples"]], "Running Workflow": [[0, "running-workflow"]], "Running Experiments": [[0, "running-experiments"]], "TAR Experiments": [[0, "tar-experiments"]], "Testing Stopping Rules": [[0, "testing-stopping-rules"]], "Visualization": [[0, "visualization"]], "Welcome to TARexp\u2019s documentation!": [[1, "welcome-to-tarexp-s-documentation"]], "tarexp": [[2, "tarexp"]], "References": [[3, "references"]], "Get Started": [[4, "get-started"]], "tarexp package": [[5, "tarexp-package"]], "Subpackages": [[5, "subpackages"]], "Submodules": [[5, "submodules"], [7, "submodules"], [16, "submodules"]], "Module contents": [[5, "module-tarexp"], [7, "module-tarexp.component"], [16, "module-tarexp.helper"]], "tarexp.base module": [[6, "module-tarexp.base"]], "tarexp.component package": [[7, "tarexp-component-package"]], "tarexp.component.base module": [[8, "module-tarexp.component.base"]], "tarexp.component.labeler module": [[9, "module-tarexp.component.labeler"]], "tarexp.component.ranker module": [[10, "module-tarexp.component.ranker"]], "tarexp.component.sampler module": [[11, "module-tarexp.component.sampler"]], "tarexp.component.stopping module": [[12, "module-tarexp.component.stopping"]], "tarexp.dataset module": [[13, "module-tarexp.dataset"]], "tarexp.evaluation module": [[14, "module-tarexp.evaluation"]], "tarexp.experiments module": [[15, "module-tarexp.experiments"]], "tarexp.helper package": [[16, "tarexp-helper-package"]], "tarexp.helper.pandas_tools module": [[17, "module-tarexp.helper.pandas_tools"]], "tarexp.helper.plotting module": [[18, "module-tarexp.helper.plotting"]], "tarexp.ledger module": [[19, "module-tarexp.ledger"]], "tarexp.util module": [[20, "module-tarexp.util"]], "tarexp.workflow module": [[21, "module-tarexp.workflow"]]}, "indexentries": {"module": [[5, "module-tarexp"], [6, "module-tarexp.base"], [7, "module-tarexp.component"], [8, "module-tarexp.component.base"], [9, "module-tarexp.component.labeler"], [10, "module-tarexp.component.ranker"], [11, "module-tarexp.component.sampler"], [12, "module-tarexp.component.stopping"], [13, "module-tarexp.dataset"], [14, "module-tarexp.evaluation"], [15, "module-tarexp.experiments"], [16, "module-tarexp.helper"], [17, "module-tarexp.helper.pandas_tools"], [18, "module-tarexp.helper.plotting"], [19, "module-tarexp.ledger"], [20, "module-tarexp.util"], [21, "module-tarexp.workflow"]], "tarexp": [[5, "module-tarexp"]], "eventable (class in tarexp.base)": [[6, "tarexp.base.Eventable"]], "savable (class in tarexp.base)": [[6, "tarexp.base.Savable"]], "easy_repr() (in module tarexp.base)": [[6, "tarexp.base.easy_repr"]], "fire() (tarexp.base.eventable method)": [[6, "tarexp.base.Eventable.fire"]], "items() (tarexp.base.space method)": [[6, "tarexp.base.space.items"]], "keys() (tarexp.base.space method)": [[6, "tarexp.base.space.keys"]], "load() (tarexp.base.savable class method)": [[6, "tarexp.base.Savable.load"]], "on() (tarexp.base.eventable method)": [[6, "tarexp.base.Eventable.on"]], "save() (tarexp.base.savable method)": [[6, "tarexp.base.Savable.save"]], "space (class in tarexp.base)": [[6, "tarexp.base.space"]], "tarexp.base": [[6, "module-tarexp.base"]], "updatecallbacks() (tarexp.base.eventable method)": [[6, "tarexp.base.Eventable.updateCallbacks"]], "values() (tarexp.base.space method)": [[6, "tarexp.base.space.values"]], "tarexp.component": [[7, "module-tarexp.component"]], "combinedcomponent (class in tarexp.component.base)": [[8, "tarexp.component.base.CombinedComponent"]], "component (class in tarexp.component.base)": [[8, "tarexp.component.base.Component"]], "functioncomponent (class in tarexp.component.base)": [[8, "tarexp.component.base.FunctionComponent"]], "ascomponent() (in module tarexp.component.base)": [[8, "tarexp.component.base.asComponent"]], "begin() (tarexp.component.base.combinedcomponent method)": [[8, "tarexp.component.base.CombinedComponent.begin"]], "begin() (tarexp.component.base.component method)": [[8, "tarexp.component.base.Component.begin"]], "checkrole() (tarexp.component.base.component method)": [[8, "tarexp.component.base.Component.checkRole"]], "combine() (in module tarexp.component.base)": [[8, "tarexp.component.base.combine"]], "haslabeler (tarexp.component.base.component property)": [[8, "tarexp.component.base.Component.hasLabeler"]], "hasranker (tarexp.component.base.component property)": [[8, "tarexp.component.base.Component.hasRanker"]], "hassampler (tarexp.component.base.component property)": [[8, "tarexp.component.base.Component.hasSampler"]], "hasstoppingrule (tarexp.component.base.component property)": [[8, "tarexp.component.base.Component.hasStoppingRule"]], "load() (tarexp.component.base.combinedcomponent class method)": [[8, "tarexp.component.base.CombinedComponent.load"]], "reset() (tarexp.component.base.combinedcomponent method)": [[8, "tarexp.component.base.CombinedComponent.reset"]], "reset() (tarexp.component.base.component method)": [[8, "tarexp.component.base.Component.reset"]], "save() (tarexp.component.base.combinedcomponent method)": [[8, "tarexp.component.base.CombinedComponent.save"]], "tarexp.component.base": [[8, "module-tarexp.component.base"]], "labeler (class in tarexp.component.labeler)": [[9, "tarexp.component.labeler.Labeler"]], "perfectlabeler (class in tarexp.component.labeler)": [[9, "tarexp.component.labeler.PerfectLabeler"]], "successproblabeler (class in tarexp.component.labeler)": [[9, "tarexp.component.labeler.SuccessProbLabeler"]], "begin() (tarexp.component.labeler.perfectlabeler method)": [[9, "tarexp.component.labeler.PerfectLabeler.begin"]], "begin() (tarexp.component.labeler.successproblabeler method)": [[9, "tarexp.component.labeler.SuccessProbLabeler.begin"]], "labeldocs() (tarexp.component.labeler.labeler method)": [[9, "tarexp.component.labeler.Labeler.labelDocs"]], "labeldocs() (tarexp.component.labeler.perfectlabeler method)": [[9, "tarexp.component.labeler.PerfectLabeler.labelDocs"]], "labeldocs() (tarexp.component.labeler.successproblabeler method)": [[9, "tarexp.component.labeler.SuccessProbLabeler.labelDocs"]], "reset() (tarexp.component.labeler.perfectlabeler method)": [[9, "tarexp.component.labeler.PerfectLabeler.reset"]], "reset() (tarexp.component.labeler.successproblabeler method)": [[9, "tarexp.component.labeler.SuccessProbLabeler.reset"]], "tarexp.component.labeler": [[9, "module-tarexp.component.labeler"]], "ranker (class in tarexp.component.ranker)": [[10, "tarexp.component.ranker.Ranker"]], "sklearnranker (class in tarexp.component.ranker)": [[10, "tarexp.component.ranker.SklearnRanker"]], "adddummyneg() (in module tarexp.component.ranker)": [[10, "tarexp.component.ranker.addDummyNeg"]], "reset() (tarexp.component.ranker.sklearnranker method)": [[10, "tarexp.component.ranker.SklearnRanker.reset"]], "scoredocuments() (tarexp.component.ranker.ranker method)": [[10, "tarexp.component.ranker.Ranker.scoreDocuments"]], "scoredocuments() (tarexp.component.ranker.sklearnranker method)": [[10, "tarexp.component.ranker.SklearnRanker.scoreDocuments"]], "tarexp.component.ranker": [[10, "module-tarexp.component.ranker"]], "trainranker() (tarexp.component.ranker.ranker method)": [[10, "tarexp.component.ranker.Ranker.trainRanker"]], "trainranker() (tarexp.component.ranker.sklearnranker method)": [[10, "tarexp.component.ranker.SklearnRanker.trainRanker"]], "randomsampler (class in tarexp.component.sampler)": [[11, "tarexp.component.sampler.RandomSampler"]], "relevancesampler (class in tarexp.component.sampler)": [[11, "tarexp.component.sampler.RelevanceSampler"]], "sampler (class in tarexp.component.sampler)": [[11, "tarexp.component.sampler.Sampler"]], "uncertaintysampler (class in tarexp.component.sampler)": [[11, "tarexp.component.sampler.UncertaintySampler"]], "begin() (tarexp.component.sampler.randomsampler method)": [[11, "tarexp.component.sampler.RandomSampler.begin"]], "freeze() (tarexp.component.sampler.uncertaintysampler method)": [[11, "tarexp.component.sampler.UncertaintySampler.freeze"]], "sampledocs() (tarexp.component.sampler.randomsampler method)": [[11, "tarexp.component.sampler.RandomSampler.sampleDocs"]], "sampledocs() (tarexp.component.sampler.relevancesampler method)": [[11, "tarexp.component.sampler.RelevanceSampler.sampleDocs"]], "sampledocs() (tarexp.component.sampler.sampler method)": [[11, "tarexp.component.sampler.Sampler.sampleDocs"]], "sampledocs() (tarexp.component.sampler.uncertaintysampler method)": [[11, "tarexp.component.sampler.UncertaintySampler.sampleDocs"]], "tarexp.component.sampler": [[11, "module-tarexp.component.sampler"]], "batchprecstoppingrule (class in tarexp.component.stopping)": [[12, "tarexp.component.stopping.BatchPrecStoppingRule"]], "budgetstoppingrule (class in tarexp.component.stopping)": [[12, "tarexp.component.stopping.BudgetStoppingRule"]], "chmheuristicsstoppingrule (class in tarexp.component.stopping)": [[12, "tarexp.component.stopping.CHMHeuristicsStoppingRule"]], "fixedroundstoppingrule (class in tarexp.component.stopping)": [[12, "tarexp.component.stopping.FixedRoundStoppingRule"]], "kneestoppingrule (class in tarexp.component.stopping)": [[12, "tarexp.component.stopping.KneeStoppingRule"]], "nullstoppingrule (class in tarexp.component.stopping)": [[12, "tarexp.component.stopping.NullStoppingRule"]], "quantstoppingrule (class in tarexp.component.stopping)": [[12, "tarexp.component.stopping.QuantStoppingRule"]], "reviewhalfstoppingrule (class in tarexp.component.stopping)": [[12, "tarexp.component.stopping.ReviewHalfStoppingRule"]], "rule2399stoppingrule (class in tarexp.component.stopping)": [[12, "tarexp.component.stopping.Rule2399StoppingRule"]], "stoppingrule (class in tarexp.component.stopping)": [[12, "tarexp.component.stopping.StoppingRule"]], "checkstopping() (tarexp.component.stopping.batchprecstoppingrule method)": [[12, "tarexp.component.stopping.BatchPrecStoppingRule.checkStopping"]], "checkstopping() (tarexp.component.stopping.budgetstoppingrule method)": [[12, "tarexp.component.stopping.BudgetStoppingRule.checkStopping"]], "checkstopping() (tarexp.component.stopping.chmheuristicsstoppingrule method)": [[12, "tarexp.component.stopping.CHMHeuristicsStoppingRule.checkStopping"]], "checkstopping() (tarexp.component.stopping.fixedroundstoppingrule method)": [[12, "tarexp.component.stopping.FixedRoundStoppingRule.checkStopping"]], "checkstopping() (tarexp.component.stopping.kneestoppingrule method)": [[12, "tarexp.component.stopping.KneeStoppingRule.checkStopping"]], "checkstopping() (tarexp.component.stopping.nullstoppingrule method)": [[12, "tarexp.component.stopping.NullStoppingRule.checkStopping"]], "checkstopping() (tarexp.component.stopping.quantstoppingrule method)": [[12, "tarexp.component.stopping.QuantStoppingRule.checkStopping"]], "checkstopping() (tarexp.component.stopping.reviewhalfstoppingrule method)": [[12, "tarexp.component.stopping.ReviewHalfStoppingRule.checkStopping"]], "checkstopping() (tarexp.component.stopping.rule2399stoppingrule method)": [[12, "tarexp.component.stopping.Rule2399StoppingRule.checkStopping"]], "checkstopping() (tarexp.component.stopping.stoppingrule method)": [[12, "tarexp.component.stopping.StoppingRule.checkStopping"]], "tarexp.component.stopping": [[12, "module-tarexp.component.stopping"]], "dataset (class in tarexp.dataset)": [[13, "tarexp.dataset.Dataset"]], "sparsevectordataset (class in tarexp.dataset)": [[13, "tarexp.dataset.SparseVectorDataset"]], "taskfeeder (class in tarexp.dataset)": [[13, "tarexp.dataset.TaskFeeder"]], "duplicate() (tarexp.dataset.dataset method)": [[13, "tarexp.dataset.Dataset.duplicate"]], "duplicate() (tarexp.dataset.sparsevectordataset method)": [[13, "tarexp.dataset.SparseVectorDataset.duplicate"]], "from_irds() (tarexp.dataset.taskfeeder class method)": [[13, "tarexp.dataset.TaskFeeder.from_irds"]], "from_sparse() (tarexp.dataset.sparsevectordataset class method)": [[13, "tarexp.dataset.SparseVectorDataset.from_sparse"]], "from_text() (tarexp.dataset.dataset class method)": [[13, "tarexp.dataset.Dataset.from_text"]], "getalldata() (tarexp.dataset.dataset method)": [[13, "tarexp.dataset.Dataset.getAllData"]], "gettrainingdata() (tarexp.dataset.dataset method)": [[13, "tarexp.dataset.Dataset.getTrainingData"]], "haslabels (tarexp.dataset.dataset property)": [[13, "tarexp.dataset.Dataset.hasLabels"]], "identifier (tarexp.dataset.dataset property)": [[13, "tarexp.dataset.Dataset.identifier"]], "identifier (tarexp.dataset.sparsevectordataset property)": [[13, "tarexp.dataset.SparseVectorDataset.identifier"]], "ingest() (tarexp.dataset.dataset method)": [[13, "tarexp.dataset.Dataset.ingest"]], "ingest() (tarexp.dataset.sparsevectordataset method)": [[13, "tarexp.dataset.SparseVectorDataset.ingest"]], "labels (tarexp.dataset.dataset property)": [[13, "tarexp.dataset.Dataset.labels"]], "labels (tarexp.dataset.sparsevectordataset property)": [[13, "tarexp.dataset.SparseVectorDataset.labels"]], "n_docs (tarexp.dataset.dataset property)": [[13, "tarexp.dataset.Dataset.n_docs"]], "n_docs (tarexp.dataset.sparsevectordataset property)": [[13, "tarexp.dataset.SparseVectorDataset.n_docs"]], "name (tarexp.dataset.dataset property)": [[13, "tarexp.dataset.Dataset.name"]], "neg_doc_ids (tarexp.dataset.dataset property)": [[13, "tarexp.dataset.Dataset.neg_doc_ids"]], "neg_doc_ids (tarexp.dataset.sparsevectordataset property)": [[13, "tarexp.dataset.SparseVectorDataset.neg_doc_ids"]], "pos_doc_ids (tarexp.dataset.dataset property)": [[13, "tarexp.dataset.Dataset.pos_doc_ids"]], "pos_doc_ids (tarexp.dataset.sparsevectordataset property)": [[13, "tarexp.dataset.SparseVectorDataset.pos_doc_ids"]], "setlabels() (tarexp.dataset.dataset method)": [[13, "tarexp.dataset.Dataset.setLabels"]], "setlabels() (tarexp.dataset.sparsevectordataset method)": [[13, "tarexp.dataset.SparseVectorDataset.setLabels"]], "tarexp.dataset": [[13, "module-tarexp.dataset"]], "costcountkey (class in tarexp.evaluation)": [[14, "tarexp.evaluation.CostCountKey"]], "measurekey (class in tarexp.evaluation)": [[14, "tarexp.evaluation.MeasureKey"]], "optimisticcost (class in tarexp.evaluation)": [[14, "tarexp.evaluation.OptimisticCost"]], "calc_all() (tarexp.evaluation.optimisticcost static method)": [[14, "tarexp.evaluation.OptimisticCost.calc_all"]], "cost_structure (tarexp.evaluation.optimisticcost attribute)": [[14, "tarexp.evaluation.OptimisticCost.cost_structure"]], "evaluate() (in module tarexp.evaluation)": [[14, "tarexp.evaluation.evaluate"]], "label (tarexp.evaluation.costcountkey attribute)": [[14, "tarexp.evaluation.CostCountKey.label"]], "measure (tarexp.evaluation.costcountkey attribute)": [[14, "tarexp.evaluation.CostCountKey.measure"]], "measure (tarexp.evaluation.measurekey attribute)": [[14, "tarexp.evaluation.MeasureKey.measure"]], "measure (tarexp.evaluation.optimisticcost attribute)": [[14, "tarexp.evaluation.OptimisticCost.measure"]], "section (tarexp.evaluation.costcountkey attribute)": [[14, "tarexp.evaluation.CostCountKey.section"]], "section (tarexp.evaluation.measurekey attribute)": [[14, "tarexp.evaluation.MeasureKey.section"]], "section (tarexp.evaluation.optimisticcost attribute)": [[14, "tarexp.evaluation.OptimisticCost.section"]], "tarexp.evaluation": [[14, "module-tarexp.evaluation"]], "target_recall (tarexp.evaluation.costcountkey attribute)": [[14, "tarexp.evaluation.CostCountKey.target_recall"]], "target_recall (tarexp.evaluation.measurekey attribute)": [[14, "tarexp.evaluation.MeasureKey.target_recall"]], "target_recall (tarexp.evaluation.optimisticcost attribute)": [[14, "tarexp.evaluation.OptimisticCost.target_recall"]], "action (class in tarexp.experiments)": [[15, "tarexp.experiments.Action"]], "experiment (class in tarexp.experiments)": [[15, "tarexp.experiments.Experiment"]], "stoppingexperimentonreplay (class in tarexp.experiments)": [[15, "tarexp.experiments.StoppingExperimentOnReplay"]], "tarexperiment (class in tarexp.experiments)": [[15, "tarexp.experiments.TARExperiment"]], "available_events (tarexp.experiments.experiment property)": [[15, "tarexp.experiments.Experiment.available_events"]], "available_events (tarexp.experiments.stoppingexperimentonreplay property)": [[15, "tarexp.experiments.StoppingExperimentOnReplay.available_events"]], "available_events (tarexp.experiments.tarexperiment property)": [[15, "tarexp.experiments.TARExperiment.available_events"]], "batch_size (tarexp.experiments.tarexperiment attribute)": [[15, "tarexp.experiments.TARExperiment.batch_size"]], "components (tarexp.experiments.tarexperiment attribute)": [[15, "tarexp.experiments.TARExperiment.components"]], "control_set_size (tarexp.experiments.tarexperiment attribute)": [[15, "tarexp.experiments.TARExperiment.control_set_size"]], "exec() (tarexp.experiments.experiment static method)": [[15, "tarexp.experiments.Experiment.exec"]], "exec() (tarexp.experiments.stoppingexperimentonreplay method)": [[15, "tarexp.experiments.StoppingExperimentOnReplay.exec"]], "exec() (tarexp.experiments.tarexperiment static method)": [[15, "tarexp.experiments.TARExperiment.exec"]], "exp_early_stopping (tarexp.experiments.stoppingexperimentonreplay attribute)": [[15, "tarexp.experiments.StoppingExperimentOnReplay.exp_early_stopping"]], "generatesettings() (tarexp.experiments.experiment method)": [[15, "tarexp.experiments.Experiment.generateSettings"]], "generatesettings() (tarexp.experiments.stoppingexperimentonreplay method)": [[15, "tarexp.experiments.StoppingExperimentOnReplay.generateSettings"]], "generatesettings() (tarexp.experiments.tarexperiment method)": [[15, "tarexp.experiments.TARExperiment.generateSettings"]], "max_round_exec (tarexp.experiments.experiment attribute)": [[15, "tarexp.experiments.Experiment.max_round_exec"]], "metrics (tarexp.experiments.experiment attribute)": [[15, "tarexp.experiments.Experiment.metrics"]], "on() (tarexp.experiments.experiment method)": [[15, "tarexp.experiments.Experiment.on"]], "output_path (tarexp.experiments.experiment attribute)": [[15, "tarexp.experiments.Experiment.output_path"]], "random_seed (tarexp.experiments.experiment attribute)": [[15, "tarexp.experiments.Experiment.random_seed"]], "registerexecarguments() (tarexp.experiments.experiment method)": [[15, "tarexp.experiments.Experiment.registerExecArguments"]], "repeat_tasks (tarexp.experiments.tarexperiment attribute)": [[15, "tarexp.experiments.TARExperiment.repeat_tasks"]], "replay (tarexp.experiments.stoppingexperimentonreplay attribute)": [[15, "tarexp.experiments.StoppingExperimentOnReplay.replay"]], "run() (tarexp.experiments.experiment method)": [[15, "tarexp.experiments.Experiment.run"]], "savable_fields (tarexp.experiments.experiment property)": [[15, "tarexp.experiments.Experiment.savable_fields"]], "saved_checkpoint_limit (tarexp.experiments.experiment attribute)": [[15, "tarexp.experiments.Experiment.saved_checkpoint_limit"]], "saved_exp_path (tarexp.experiments.stoppingexperimentonreplay attribute)": [[15, "tarexp.experiments.StoppingExperimentOnReplay.saved_exp_path"]], "saved_score_limit (tarexp.experiments.experiment attribute)": [[15, "tarexp.experiments.Experiment.saved_score_limit"]], "seed_docs_construction (tarexp.experiments.tarexperiment attribute)": [[15, "tarexp.experiments.TARExperiment.seed_docs_construction"]], "should_save (tarexp.experiments.action attribute)": [[15, "tarexp.experiments.Action.should_save"]], "should_stop (tarexp.experiments.action attribute)": [[15, "tarexp.experiments.Action.should_stop"]], "stopping_rules (tarexp.experiments.stoppingexperimentonreplay attribute)": [[15, "tarexp.experiments.StoppingExperimentOnReplay.stopping_rules"]], "tarexp.experiments": [[15, "module-tarexp.experiments"]], "tasks (tarexp.experiments.stoppingexperimentonreplay attribute)": [[15, "tarexp.experiments.StoppingExperimentOnReplay.tasks"]], "tasks (tarexp.experiments.tarexperiment attribute)": [[15, "tarexp.experiments.TARExperiment.tasks"]], "workflow (tarexp.experiments.tarexperiment attribute)": [[15, "tarexp.experiments.TARExperiment.workflow"]], "workflow_kwargs (tarexp.experiments.tarexperiment attribute)": [[15, "tarexp.experiments.TARExperiment.workflow_kwargs"]], "tarexp.helper": [[16, "module-tarexp.helper"]], "createdffromresults() (in module tarexp.helper.pandas_tools)": [[17, "tarexp.helper.pandas_tools.createDFfromResults"]], "tarexp.helper.pandas_tools": [[17, "module-tarexp.helper.pandas_tools"]], "cost_dynamic() (in module tarexp.helper.plotting)": [[18, "tarexp.helper.plotting.cost_dynamic"]], "lighten() (in module tarexp.helper.plotting)": [[18, "tarexp.helper.plotting.lighten"]], "tarexp.helper.plotting": [[18, "module-tarexp.helper.plotting"]], "frozenledger (class in tarexp.ledger)": [[19, "tarexp.ledger.FrozenLedger"]], "ledger (class in tarexp.ledger)": [[19, "tarexp.ledger.Ledger"]], "annotate() (tarexp.ledger.frozenledger method)": [[19, "tarexp.ledger.FrozenLedger.annotate"]], "annotate() (tarexp.ledger.ledger method)": [[19, "tarexp.ledger.Ledger.annotate"]], "annotated (tarexp.ledger.ledger property)": [[19, "tarexp.ledger.Ledger.annotated"]], "annotation (tarexp.ledger.ledger property)": [[19, "tarexp.ledger.Ledger.annotation"]], "control_mask (tarexp.ledger.ledger property)": [[19, "tarexp.ledger.Ledger.control_mask"]], "createcontrol() (tarexp.ledger.ledger method)": [[19, "tarexp.ledger.Ledger.createControl"]], "freeze() (tarexp.ledger.ledger method)": [[19, "tarexp.ledger.Ledger.freeze"]], "freeze_at() (tarexp.ledger.ledger method)": [[19, "tarexp.ledger.Ledger.freeze_at"]], "getannotationcounts() (tarexp.ledger.ledger method)": [[19, "tarexp.ledger.Ledger.getAnnotationCounts"]], "getreviewedids() (tarexp.ledger.ledger method)": [[19, "tarexp.ledger.Ledger.getReviewedIds"]], "isdone (tarexp.ledger.ledger property)": [[19, "tarexp.ledger.Ledger.isDone"]], "n_annotated (tarexp.ledger.ledger property)": [[19, "tarexp.ledger.Ledger.n_annotated"]], "n_docs (tarexp.ledger.ledger property)": [[19, "tarexp.ledger.Ledger.n_docs"]], "n_neg_annotated (tarexp.ledger.ledger property)": [[19, "tarexp.ledger.Ledger.n_neg_annotated"]], "n_pos_annotated (tarexp.ledger.ledger property)": [[19, "tarexp.ledger.Ledger.n_pos_annotated"]], "n_rounds (tarexp.ledger.frozenledger property)": [[19, "tarexp.ledger.FrozenLedger.n_rounds"]], "n_rounds (tarexp.ledger.ledger property)": [[19, "tarexp.ledger.Ledger.n_rounds"]], "tarexp.ledger": [[19, "module-tarexp.ledger"]], "getonedimscores() (in module tarexp.util)": [[20, "tarexp.util.getOneDimScores"]], "iter_with_length (class in tarexp.util)": [[20, "tarexp.util.iter_with_length"]], "readobj() (in module tarexp.util)": [[20, "tarexp.util.readObj"]], "saveobj() (in module tarexp.util)": [[20, "tarexp.util.saveObj"]], "stable_hash() (in module tarexp.util)": [[20, "tarexp.util.stable_hash"]], "tarexp.util": [[20, "module-tarexp.util"]], "onephasetarworkflow (class in tarexp.workflow)": [[21, "tarexp.workflow.OnePhaseTARWorkflow"]], "onephasetarworkflowreplay (class in tarexp.workflow)": [[21, "tarexp.workflow.OnePhaseTARWorkflowReplay"]], "twophasetarworkflow (class in tarexp.workflow)": [[21, "tarexp.workflow.TwoPhaseTARWorkflow"]], "workflow (class in tarexp.workflow)": [[21, "tarexp.workflow.Workflow"]], "workflowreplay (class in tarexp.workflow)": [[21, "tarexp.workflow.WorkflowReplay"]], "component (tarexp.workflow.workflow property)": [[21, "tarexp.workflow.Workflow.component"]], "dataset (tarexp.workflow.workflow property)": [[21, "tarexp.workflow.Workflow.dataset"]], "getmetrics() (tarexp.workflow.onephasetarworkflow method)": [[21, "tarexp.workflow.OnePhaseTARWorkflow.getMetrics"]], "getmetrics() (tarexp.workflow.workflow method)": [[21, "tarexp.workflow.Workflow.getMetrics"]], "isstopped (tarexp.workflow.workflow property)": [[21, "tarexp.workflow.Workflow.isStopped"]], "isstopped (tarexp.workflow.workflowreplay property)": [[21, "tarexp.workflow.WorkflowReplay.isStopped"]], "latest_scores (tarexp.workflow.onephasetarworkflowreplay property)": [[21, "tarexp.workflow.OnePhaseTARWorkflowReplay.latest_scores"]], "latest_scores (tarexp.workflow.workflow property)": [[21, "tarexp.workflow.Workflow.latest_scores"]], "ledger (tarexp.workflow.workflow property)": [[21, "tarexp.workflow.Workflow.ledger"]], "ledger (tarexp.workflow.workflowreplay property)": [[21, "tarexp.workflow.WorkflowReplay.ledger"]], "load() (tarexp.workflow.workflow class method)": [[21, "tarexp.workflow.Workflow.load"]], "makereplay() (tarexp.workflow.onephasetarworkflow method)": [[21, "tarexp.workflow.OnePhaseTARWorkflow.makeReplay"]], "makereplay() (tarexp.workflow.workflow method)": [[21, "tarexp.workflow.Workflow.makeReplay"]], "n_rounds (tarexp.workflow.workflow property)": [[21, "tarexp.workflow.Workflow.n_rounds"]], "n_rounds (tarexp.workflow.workflowreplay property)": [[21, "tarexp.workflow.WorkflowReplay.n_rounds"]], "review_candidates (tarexp.workflow.onephasetarworkflow attribute)": [[21, "tarexp.workflow.OnePhaseTARWorkflow.review_candidates"]], "review_candidates (tarexp.workflow.onephasetarworkflowreplay property)": [[21, "tarexp.workflow.OnePhaseTARWorkflowReplay.review_candidates"]], "save() (tarexp.workflow.workflow method)": [[21, "tarexp.workflow.Workflow.save"]], "save() (tarexp.workflow.workflowreplay method)": [[21, "tarexp.workflow.WorkflowReplay.save"]], "step() (tarexp.workflow.onephasetarworkflow method)": [[21, "tarexp.workflow.OnePhaseTARWorkflow.step"]], "step() (tarexp.workflow.twophasetarworkflow method)": [[21, "tarexp.workflow.TwoPhaseTARWorkflow.step"]], "step() (tarexp.workflow.workflow method)": [[21, "tarexp.workflow.Workflow.step"]], "step() (tarexp.workflow.workflowreplay method)": [[21, "tarexp.workflow.WorkflowReplay.step"]], "tarexp.workflow": [[21, "module-tarexp.workflow"]]}})